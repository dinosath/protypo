{% set file_name= values.outputFolder ~"/Cargo.toml" %}
to: {{file_name}}
message: "File `{{file_name}}` was created successfully."
---
[workspace]

[package]
name = "{{ values.application.name }}"
version = "0.1.0"
edition = "2021"
publish = false

[profile.release]
codegen-units = 1
lto = true
strip = true
debug = false
panic = "abort"

[dependencies]
async-trait = "0.1.83"
axum = { version = "0.7", features = ["multipart"] }
axum_session = { version = "0.14", default-features = false }
axum-extra = { version = "0.9", features = ["cookie"] }
chrono = "0.4"
fluent-templates = { version = "0.11", features = ["tera"] }
include_dir = "0.7"
loco-rs = { version = "0.12.0" }
loco-extras = { version="0.4.0", features = ["initializer-opentelemetry"] }
migration = { path = "migration" }

sea-orm = { version = "1.1.1", features = ["sqlx-sqlite","sqlx-postgres","runtime-tokio-rustls","macros",] }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
tokio = { version = "1.41", default-features = false }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
unic-langid = "0.9"
uuid = { version = "1.10", features = ["v4"] }
validator = { version = "0.19" }

{% if features and 'graphql' in features  -%}
seaography = { version = "1.0.0-rc.4", features = ["with-decimal", "with-chrono","with-uuid","with-bigdecimal","with-json","with-postgres-array","with-time"] }
async-graphql = { version = "7.0", features = ["decimal", "chrono", "dataloader", "dynamic-schema"] }
async-graphql-axum = { version = "7.0" }
lazy_static = { version = "1.4" }
tower-service = { version = "0.3" }
{% endif -%}

[[bin]]
name = "{{ values.application.name }}-cli"
path = "src/bin/main.rs"
required-features = []

[dev-dependencies]
serial_test = "3.1"
rstest = "0.23"
loco-rs = { version = "0.12.0", features = ["testing"] }
insta = { version = "1.34", features = ["redactions", "yaml", "filters"] }