{# generate controllers #}
{% if 'multitenancy' in values.application and 'enabled' in values.application.multitenancy and values.application.multitenancy.enabled == true and values.application.multitenancy.type == 'column' -%}
{% set file_name = "migration_00000002_add_tenants" -%}

to: {{ values.outputFolder }}/migration/src/{{ file_name }}.rs
message: "Migration `{{ file_name }}.rs` was added successfully."
injections:
- into: {{ values.outputFolder }}/migration/src/lib.rs
  before: "pub struct Migrator;"
  content: "mod {{ file_name }};"
- into: {{ values.outputFolder }}/migration/src/lib.rs
  before: "// inject-above"
  content: "Box::new({{ file_name }}::Migration),"
---
use sea_orm::Statement;
use sea_orm_migration::prelude::*;

#[derive(DeriveMigrationName)]
pub struct Migration;

#[async_trait::async_trait]
impl MigrationTrait for Migration {
    async fn up(&self, manager: &SchemaManager) -> Result<(), DbErr> {
        let db = manager.get_connection();

        db.execute_unprepared(
        "
    {% include '_add_tenants_db.sql.jinja' -%}
        "
        ).await?;

        Ok(())
    }

    async fn down(&self, manager: &SchemaManager) -> Result<(), DbErr> {
        manager.get_connection()
            .execute_unprepared("")
            .await?;

        Ok(())
    }
}
{% endif -%}