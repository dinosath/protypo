{%- import "_macros_front.jinja" as macros -%}
{%- import "_macros.jinja" as core -%}

{%- macro get_input_type(name, property, required=false) -%}
{%- filter trim -%}
    {%- set map = [
            {"type": "string", "format": "uuid", "result": "TextInput"},
            {"type": "string", "format": "date-time", "result": "DateTimeInput"},
            {"type": "string", "format": "date", "result": "DateInput"},
            {"type": "string", "format": "time", "result": "DateInput"},
            {"type": "string", "enum": Some, "result": "SelectInput" },
            {"type": "string", "result": "TextInput"},
            {"type": "boolean", "result": "BooleanInput"},
            {"type": "integer", "min": 0, "max": 255, "result": "NumberInput"},
            {"type": "integer", "min": 0, "max": 65535, "result": "NumberInput"},
            {"type": "integer", "min": 0, "max": 4294967295, "result": "NumberInput"},
            {"type": "integer", "min": 0, "max": None, "result": "NumberInput"},
            {"type": "integer", "min": None, "max": 127, "result": "NumberInput"},
            {"type": "integer", "min": None, "max": 32767, "result": "NumberInput"},
            {"type": "integer", "min": None, "max": 2147483647, "result": "NumberInput"},
            {"type": "integer", "min": None, "max": None, "result": "NumberInput"},
            {"type": "number", "min": -3.40282347, "max": 3.40282347, "result": "NumberInput"},
            {"type": "number", "min": None, "max": None, "result": "NumberInput"},
            {"x-relationship": "many-to-one", "result": "ReferenceInput" },
            {"x-relationship": "one-to-many", "result": "ReferenceArrayInput" },
            {"x-relationship": "many-to-many", "result": "ReferenceArrayInput" }
            ] -%}
    {%- set type = 'None' -%}
    {%- for entry in map -%}
            {% set condition = (property.type == entry.type and entry.format == property.format)
                    or ('x-relationship' in property and entry['x-relationship'] == property['x-relationship'])
                    or ('enum' in property and 'enum' in entry)
                    -%}

            {%- if condition -%}
                {%- set type = entry.result -%}
                {{ type }}
                {%- break -%}
            {%- endif -%}
    {%- endfor -%}
{%- endfilter -%}
{%- endmacro -%}

<{{ get_input_type(name, property, name in property.required) }} {{ 'readOnly' if 'readOnly' in property }} source="{{ name | camel_case }}"
{%- if enum in property -%}
 choices={[
            {%- for enum in property.enum -%}
               { name: '{{ enum }}' }{%- if not loop.last -%},{% endif -%}
            {%- endfor -%}
            ]}
 {% endif -%}
{%- set is_relation = core.relation_is_many_to_many(property)=='true' or core.relation_is_many_to_one(property=property)=='true' -%}
{%- if is_relation -%}
{%- set relation = core.get_relation(property) -%}
{{' '}}reference="{{ relation | plural | kebab_case }}" label="{{ relation | pascal_case }}">
                <AutocompleteInput label="{{ name }}" {% include "react-admin-property-validation.jinja" -%}/>
            </{{ get_input_type(name, property, name in property.required) }}>
{% else -%}
{{- ' validate={[required()]}' if 'required' in entity and name in entity.required  }}/>
{% endif -%}